version: "3"

# Define the network used by all services in this setup
networks:
  coin-challenge-network:
    driver: bridge

services:
  # Backend service configuration
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coin-challenge-network
    environment:
      POSTGRES_DB: image_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db

  # Frontend service configuration
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - coin-challenge-network
    environment:
      # URL to the backend service (http://nginx/.. in prod)
      REACT_APP_API_URL: "http://localhost:8000"

  # Adminer (Database management interface)
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coin-challenge-network

  # Database service configuration
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: image_db
    # Mounts the named volume 'pgdata' at the required path
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - coin-challenge-network
    healthcheck:
      # Health check to ensure DB is ready
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

# Volumes section for defining persistent storage
# Named volume 'pgdata' used for storing PostgreSQL data persistently
volumes:
  pgdata:
